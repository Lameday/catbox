{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/Search Box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6SAGe,SAASA,EAAKC,GACzB,OACI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,8BAAwEC,IAAI,QACpF,6BAAKL,EAAMG,QAAQG,OACnB,4BAAIN,EAAMG,QAAQI,WCJf,SAASC,EAAUR,GAC9B,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,SAASC,KAAI,SAAAP,GAAO,OACvB,cAACJ,EAAD,CAAuBI,QAASA,GAArBA,EAAQC,S,MCLpB,SAASO,EAAT,GAAiD,IAA7BC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,aAC5C,OACI,8BACA,uBACIZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,M,UCLDG,E,kDACnB,aAAe,IAAD,8BACZ,gBAOFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAMG,OAAOC,SAPzC,EAAKC,MAAO,CACVb,SAAU,GACVU,YAAa,IAJH,E,qDAYd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAACT,SAAUkB,S,oBAG5C,WACE,MAAkCC,KAAKN,MAA/Bb,EAAR,EAAQA,SAAUU,EAAlB,EAAkBA,YACZU,EAAmBpB,EAASqB,QAAO,SAAA3B,GAAO,OAC9CA,EAAQG,KAAKyB,cAAcC,SAASb,EAAYc,wBAElD,OACE,sBAAKhC,UAAU,MAAf,UACE,yCACA,cAACU,EAAD,CAAWC,YAAY,cAAcC,aAAce,KAAKf,eACxD,cAACL,EAAD,CAAUC,SAAUoB,W,GA5BKK,aCOlBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.639c74b1.chunk.js","sourcesContent":["import React from 'react'\r\nimport './card.styles.css'\r\n\r\nexport default function Card(props) {\r\n    return (\r\n        <div className='card-container'>\r\n            <img src={`https://robohash.org/${props.monster.id}.png?set=set4&size=180x180`} alt=\"cat\"></img>\r\n            <h2>{props.monster.name}</h2>\r\n            <p>{props.monster.email}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport Card from '../card/card.component'\r\n\r\nexport default function CardList (props) {\r\n    return (\r\n        <div className='card-list'>\r\n            {props.monsters.map(monster => \r\n                <Card key={monster.id} monster={monster}/> \r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport './search-box.styles.css'\r\n\r\nexport default function SearchBox({placeholder, handleChange}) {\r\n    return (\r\n        <div>\r\n        <input \r\n            className='search'\r\n            type='search' \r\n            placeholder={placeholder} \r\n            onChange={handleChange}\r\n        />\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\nimport CardList from './components/card-list/card-list.component'\nimport SearchBox from './components/Search Box/search-box.component'\nimport './App.css'\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state ={ \n      monsters: [],\n      searchField: ''\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({searchField: event.target.value})\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({monsters: users}))\n\n  }\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter(monster =>  \n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()))\n\n    return (\n      <div className='App'>\n        <h1>Cat Box</h1>\n        <SearchBox placeholder='Search Cats' handleChange={this.handleChange}/>\n        <CardList monsters={filteredMonsters}/>        \n      </div>\n    )\n  }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}